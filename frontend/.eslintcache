[{"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\index.js":"1","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\App.js":"2","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\store.js":"3","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\HomeScreen.js":"4","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\ProductScreen.js":"5","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\Header.js":"6","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\Footer.js":"7","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\CartScreen.js":"8","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\RegisterScreen.js":"9","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\LoginScreen.js":"10","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\ProfileScreen.js":"11","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\ShippingScreen.js":"12","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\PayementScreen.js":"13","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\PlaceOrderScreen.js":"14","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\OrderScreen.js":"15","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\UserListScreen.js":"16","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\UserEditScreen.js":"17","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\ProductListScreen.js":"18","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\OrderListScreen.js":"19","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\ProductEditScreen.js":"20","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\reducers\\cartReducers.js":"21","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\reducers\\productsReducer.js":"22","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\reducers\\userReducers.js":"23","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\reducers\\orderReducer.js":"24","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\Loader.js":"25","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\Product.js":"26","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\Paginate.js":"27","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\Meta.js":"28","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\Message.js":"29","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\Rating.js":"30","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\ProductCarousel.js":"31","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\SearchBox.js":"32","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\FormContainer.js":"33","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\actions\\userActions.js":"34","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\actions\\productsAction.js":"35","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\actions\\orderActions.js":"36","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\actions\\cartActions.js":"37","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\constants\\userConstants.js":"38","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\constants\\productsConstant.js":"39","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\constants\\cartConstants.js":"40","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\constants\\orderConstants.js":"41","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\CheckoutSteps.js":"42","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\CourseScreen.js":"43"},{"size":283,"mtime":1616454657000,"results":"44","hashOfConfig":"45"},{"size":2807,"mtime":1643711855314,"results":"46","hashOfConfig":"45"},{"size":2244,"mtime":1616454657000,"results":"47","hashOfConfig":"45"},{"size":1591,"mtime":1643478194070,"results":"48","hashOfConfig":"45"},{"size":8226,"mtime":1643795198084,"results":"49","hashOfConfig":"45"},{"size":3005,"mtime":1643708526458,"results":"50","hashOfConfig":"45"},{"size":356,"mtime":1616454657000,"results":"51","hashOfConfig":"45"},{"size":3824,"mtime":1643795872244,"results":"52","hashOfConfig":"45"},{"size":3358,"mtime":1616454657000,"results":"53","hashOfConfig":"45"},{"size":2229,"mtime":1616454657000,"results":"54","hashOfConfig":"45"},{"size":5901,"mtime":1643811623948,"results":"55","hashOfConfig":"45"},{"size":2648,"mtime":1643794486805,"results":"56","hashOfConfig":"45"},{"size":1989,"mtime":1643794779508,"results":"57","hashOfConfig":"45"},{"size":5826,"mtime":1643795220473,"results":"58","hashOfConfig":"45"},{"size":7606,"mtime":1643708193101,"results":"59","hashOfConfig":"45"},{"size":3112,"mtime":1616454657000,"results":"60","hashOfConfig":"45"},{"size":3583,"mtime":1616454657000,"results":"61","hashOfConfig":"45"},{"size":4456,"mtime":1643810577275,"results":"62","hashOfConfig":"45"},{"size":3389,"mtime":1643810048863,"results":"63","hashOfConfig":"45"},{"size":7039,"mtime":1643796280040,"results":"64","hashOfConfig":"45"},{"size":1458,"mtime":1616454657000,"results":"65","hashOfConfig":"45"},{"size":3899,"mtime":1616454657000,"results":"66","hashOfConfig":"45"},{"size":3759,"mtime":1616454657000,"results":"67","hashOfConfig":"45"},{"size":3992,"mtime":1616454657000,"results":"68","hashOfConfig":"45"},{"size":454,"mtime":1616454657000,"results":"69","hashOfConfig":"45"},{"size":1159,"mtime":1643795168412,"results":"70","hashOfConfig":"45"},{"size":712,"mtime":1616454657000,"results":"71","hashOfConfig":"45"},{"size":530,"mtime":1616454657000,"results":"72","hashOfConfig":"45"},{"size":274,"mtime":1616454657000,"results":"73","hashOfConfig":"45"},{"size":1280,"mtime":1616454657000,"results":"74","hashOfConfig":"45"},{"size":1249,"mtime":1643811776878,"results":"75","hashOfConfig":"45"},{"size":839,"mtime":1643442304472,"results":"76","hashOfConfig":"45"},{"size":374,"mtime":1616454657000,"results":"77","hashOfConfig":"45"},{"size":6362,"mtime":1616454657000,"results":"78","hashOfConfig":"45"},{"size":5267,"mtime":1616454657000,"results":"79","hashOfConfig":"45"},{"size":5422,"mtime":1616454657000,"results":"80","hashOfConfig":"45"},{"size":1232,"mtime":1616454657000,"results":"81","hashOfConfig":"45"},{"size":1425,"mtime":1616454657000,"results":"82","hashOfConfig":"45"},{"size":1447,"mtime":1616454657000,"results":"83","hashOfConfig":"45"},{"size":272,"mtime":1616454657000,"results":"84","hashOfConfig":"45"},{"size":1195,"mtime":1616454657000,"results":"85","hashOfConfig":"45"},{"size":1533,"mtime":1643794588136,"results":"86","hashOfConfig":"45"},{"size":324,"mtime":1643712588779,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1v8wnmg",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"90"},"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\index.js",[],["185","186"],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\App.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\store.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\HomeScreen.js",["187","188","189"],"import React,{useEffect, useState} from 'react'\nimport {Helmet} from 'react-helmet'\nimport {Link} from 'react-router-dom'\nimport {Container,Row,Col} from \"react-bootstrap\"\nimport Product from \"../components/Product\"\nimport {useDispatch,useSelector} from 'react-redux'\nimport { listProducts } from '../actions/productsAction'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport Paginate from '../components/Paginate'\nimport Message from '../components/Message'\nimport ProductCarousel from '../components/ProductCarousel'\n\n\nconst HomeScreen = ({match}) => {\n    const keyword = match.params.keyword\n\n    const pageNumber=match.params.pageNumber || 1\n   const dispatch=useDispatch()\n\n   const productList= useSelector(state => state.productList)\n   const {loading,error,products,page,pages}=productList\n    useEffect(() => {\n       dispatch(listProducts(keyword,pageNumber))\n    },[dispatch, keyword,pageNumber])\n   \n    return (\n        <>  \n        <Meta/>\n        {!keyword ?<ProductCarousel/>:<Link to ='/' className='btn btn-light'>\n            Go Back</Link>}\n            <h2>Latest Courses...</h2>\n            {loading?<Loader/>:error?<Message/>:\n            <>\n            <Row>\n            {products.map((product)=>(\n                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                    <Product product={product}/>\n                </Col>\n            ))}\n            </Row>\n            <Paginate pages={pages} page={page} keyword={keyword ?keyword:''}/>\n            </>\n            }\n        </>\n    )\n}\n\nexport default HomeScreen\n","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\ProductScreen.js",["190","191"],"import React,{useEffect,useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Row,Col,Image,ListGroup,Card,Button, ListGroupItem, Form, FormGroup} from 'react-bootstrap'\nimport Rating from '../components/Rating'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProductDetails,createProductReview} from '../actions/productsAction'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport Message from '../components/Message'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productsConstant'\n\nconst ProductScreen = ({history,match}) => {\n   const [qty,setQty]=useState(1) \n   const [rating,setRating]=useState(0) \n   const [comment,setComment]=useState('') \n\n   const dispatch=useDispatch()\n\n   const productDetails = useSelector(state => state.productDetails)\n   const {loading,error,product}=productDetails\n\n   const productReviewCreate = useSelector(state => state.productReviewCreate)\n   const {success:successReviewCreate, loading: loadingProductReview,error:errorReviewCreate}=productReviewCreate\n   \n   const userLogin=useSelector(state=>state.userLogin)\n   const {userInfo}=userLogin\n   \n    useEffect(() => {\n        if(successReviewCreate){\n            setRating(0)\n            setComment('')\n            \n        }\n        if (!product._id || product._id !== match.params.id) {\n            dispatch(listProductDetails(match.params.id))\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n          }\n    },[dispatch, match.params.id, product._id, successReviewCreate])\n\n    const addToCartHandler=()=>{\n            history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler=(e)=>{\n        e.preventDefault()\n        dispatch(createProductReview(match.params.id,{rating,comment}))\n    }\n    console.log(product)\n\n    return (\n        <>\n           <Link className=\"btn btn-light my-3\" to='/'>\n               Go Back\n           </Link>\n           {loading? <Loader/>:error? <Message variant='danger'>{error}</Message>:\n           (<>\n           <Meta title={product.name}/>\n           <Row>\n           <Col md={8} className='product_image'>\n               <Image src={product.image} alt={product.name} fluid/>\n           </Col>\n           <Col md={6}>\n               <ListGroup variant='flush'>\n                   <ListGroup.Item>\n                       <h2>\n                           {product.name}\n                       </h2>\n                   </ListGroup.Item>\n                   <ListGroup.Item>\n                       <Rating\n                            value={product.rating}\n                            text={`${product.numReviews} reviews`}\n                            \n                       />\n                   </ListGroup.Item>\n                   <ListGroup.Item>\n                       Price:${product.price}\n                   </ListGroup.Item>\n                   <ListGroup.Item>\n                       Description:  {product.description}\n                   </ListGroup.Item>\n               </ListGroup>\n           </Col>\n           <Col md={6}>\n               <Card>\n                   <ListGroup variant='flush'>\n                       <ListGroup.Item>\n                           <Row>\n                               <Col>\n                                    Price:\n                               </Col>\n                               <Col>\n                                    <strong>৳{product.price}</strong>\n                               </Col>\n                           </Row>\n                       </ListGroup.Item>\n                       <ListGroup.Item>\n                           <Row>\n                               <Col>\n                                    Status:\n                               </Col>\n                               <Col>\n                                   {product.countInStock>0 ? '15% Discount':'Comming Soon'}\n                               </Col>\n                           </Row>\n                       </ListGroup.Item>\n                        {product.countInStock>0 &&(\n                            <ListGroup>\n                                <Row>\n                                    <Col>\n                                            No of User\n                                    </Col>\n                                    <Col>\n                                        <Form.Control as='select' value={qty} onChange={(e)=>\n                                        setQty(e.target.value)}> {\n                                        [...Array(product.countInStock).keys()].map((x)=>(\n                                            <option key={x+1} value={x+1}>{x+1}</option>\n                                           \n                                        ))}\n                                        </Form.Control>\n                                    </Col>\n                                </Row>\n                            </ListGroup>\n                        )}\n                       <ListGroup.Item>\n                           <Button onClick={addToCartHandler} className='btn-block' type='button' disabled={product.countInStock===0}>Add to Cart</Button>\n                       </ListGroup.Item>\n                       <ListGroup.Item>\n                           <Button variant='danger' onClick={addToCartHandler} className='btn-block' type='button' disabled={product.countInStock===0}>Buy Now</Button>\n                       </ListGroup.Item>\n                   </ListGroup>\n               </Card>\n           </Col>\n       </Row>\n        <Row>\n         <Col md={6}>\n            <h3>Reviews</h3>\n            {product.reviews.length===0 && <Message>No Reviews</Message>}\n            <ListGroup variant='flush'>\n                {console.log(product.review)}\n                {product.reviews.map(review =>(\n                    <ListGroup.Item key={review._id}>\n                        <strong>{review.name}</strong>\n                        <Rating value={review.rating}/>\n                        <p>{review.createdAt.substring(0,10)}</p>\n                        <p>{review.comment}</p>\n                    </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                    <h2>Write a Customer Review</h2>\n                    {successReviewCreate && (\n                    <Message variant='success'>\n                      Review submitted successfully\n                    </Message>\n                  )}\n                  {loadingProductReview && <Loader />}\n                    {errorReviewCreate && (\n                        <Message variant ='danger'>{errorReviewCreate}</Message>\n                    )}\n                    {userInfo?\n                    <Form onSubmit={submitHandler}>\n                    <Form.Group onControlId='rating'>\n                        <Form.Label>\n                            Rating\n                        </Form.Label>\n                        <Form.Control as='select' value={rating} onChange={(e)=> setRating(e.target.value)}>\n                            <option value=''>Select ....</option>\n                            <option value='1'>1 - Poor</option>\n                            <option value='2'>2 - Fair</option>\n                            <option value='3'>3 - Good</option>\n                            <option value='4'>4 - Very Good</option>\n                            <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='comment'>\n                        <Form.Label>\n                            Comment\n                        </Form.Label>\n                        <Form.Control as='textarea' row='3' value={comment} onChange={(e)=> setComment(e.target.value)}>\n\n                        </Form.Control>\n                    </Form.Group>\n                    <Button disabled={loadingProductReview}  type='submit'  variant='primary'>Submit</Button>\n                     \n                    </Form>\n                    :<Message>Please <Link to='/login'>sign in</Link> to write a review{' '}</Message>}\n                </ListGroup.Item>\n            </ListGroup>\n         </Col>\n        </Row>\n       </>)}\n           \n        </>\n    )\n}\n\nexport default ProductScreen\n","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\Header.js",["192","193","194"],"import React from 'react'\nimport {Route} from 'react-router-dom'\nimport {LinkContainer} from 'react-router-bootstrap' \nimport {Navbar,Nav,Form,FormControl,Button,Container, NavDropdown} from \"react-bootstrap\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\nconst Header = () => {\n    const dispatch = useDispatch()\n    const userLogin=useSelector(state=>state.userLogin)\n    const {userInfo}=userLogin\n\n    const logoutHandler=()=>{\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>PORTECAI</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    \n                        <Route render={({history}) => <SearchBox history={history} />} />\n                        <Nav className=\"ml-auto\">\n                            <LinkContainer to=\"/cart\">\n                                <Nav.Link ><i className='fas fa-shopping-cart'> </i> Cart</Nav.Link>\n                            </LinkContainer>\n                            {userInfo?(\n                                <NavDropdown title={userInfo.name} id='username'>\n                                <LinkContainer to='/profile'>\n                                   <NavDropdown.Item>Profile</NavDropdown.Item>\n                                </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                                </NavDropdown>\n                            ): <LinkContainer to=\"/login\">\n                            <Nav.Link ><i className='fas fa-user'> </i> Sign In</Nav.Link>    \n                            </LinkContainer>}\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenu'>\n                                <LinkContainer to='/admin/userlist'>\n                                   <NavDropdown.Item>Users</NavDropdown.Item>\n                                </LinkContainer>\n                                <LinkContainer to='/admin/productlist'>\n                                   <NavDropdown.Item>Course</NavDropdown.Item>\n                                </LinkContainer>\n                                <LinkContainer to='/admin/orderlist'>\n                                   <NavDropdown.Item>Orders </NavDropdown.Item>\n                                </LinkContainer>\n                                </NavDropdown>     \n                            )}\n                            \n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\Footer.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\CartScreen.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\ProfileScreen.js",["195","196"],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\ShippingScreen.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\PayementScreen.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\PlaceOrderScreen.js",["197"],"import React,{useEffect} from 'react'\nimport {Button,Row,Col,ListGroup,Image,Card, NavLink} from 'react-bootstrap'\nimport{useDispatch,useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\n\nconst PlaceOrderScreen = ({history}) => {\n    const dispatch=useDispatch()\n\n    const cart =useSelector(state=>state.cart)\n    if (!cart.shippingAddress.address) {\n        history.push('/shipping')\n      } else if (!cart.paymentMethod) {\n        history.push('/payment')\n      }\n\n    const addDecimals=(num)=>{\n        return (Math.round(num*100)/100).toFixed(2)\n    }\n    cart.itemsPrice=addDecimals(cart.cartItems.reduce(\n        (acc,item)=> acc+ item.price*item.qty,0\n    ))\n    cart.shippingPrice=addDecimals(cart.itemsPrice>100 ? 0 :100)\n    cart.taxPrice=addDecimals(Number((0.15*cart.itemsPrice).toFixed(2)))\n    cart.totalPrice=(Number(cart.itemsPrice)-Number(cart.taxPrice)).toFixed(2)\n\n\n    const orderCreate=useSelector(state=>state.orderCreate)\n    const{order,success,error}=orderCreate\n\n    useEffect(()=>{\n        if(success){\n            history.push(`/order/${order._id}`)\n            dispatch({ type: USER_DETAILS_RESET })\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n        // eslint-disable-next-line \n    },[history,success])\n\n    const placeOrderHandler=()=>{\n       dispatch(createOrder({\n           orderItems:cart.cartItems,\n           shippingAddress:cart.shippingAddress,\n           paymentMethod:cart.paymentMethod,\n           itemsPrice:cart.itemsPrice,\n           shippingPrice:cart.shippingPrice,\n           taxPrice:cart.taxPrice,\n           totalPrice:cart.totalPrice,\n       }))\n\n    }\n    return (\n        <>\n        <CheckoutSteps step1 step2 step3 step4/>\n         <Row>\n             <Col md={8}>\n                 <ListGroup variant ='flush'>\n                     <ListGroup.Item>\n                         <h2>Billing Address</h2>\n                         <p>\n                             <strong> Address: </strong>\n                             {cart.shippingAddress.address},{cart.shippingAddress.city}\n                             ,{cart.shippingAddress.postalCode},{cart.shippingAddress.country}\n                         </p>\n                     </ListGroup.Item>\n                     <ListGroup.Item>\n                        <h2>Payment Method</h2>\n                        <strong>Method: </strong>\n                        {cart.paymentMethod}\n                     </ListGroup.Item>\n                     <ListGroup.Item>\n                         <h2>Order details</h2>\n                         {cart.cartItems.length===0?<Message>Your cart is empty</Message>:(\n                             <ListGroup variant ='flush'>\n                                 {cart.cartItems.map((item,index)=>(\n                                     <ListGroup.Item key={index}>\n                                         <Row>\n                                             <Col md={1}>\n                                              <Image src={item.image} alt={item.name} fluid rounded />\n                                           </Col>\n                                           <Col>\n                                                <Link to ={`/product/${item.product}`}>\n                                                    {item.name}\n                                                </Link>\n                                           </Col>\n                                           <Col md={4}>\n                                               {item.qty} x ${item.price} = ${item.qty * item.price}\n                                           </Col>\n                                         </Row>\n                                     </ListGroup.Item>\n                                 ))}\n                             </ListGroup>\n                         )}\n                     </ListGroup.Item>\n                 </ListGroup>\n             </Col>\n             <Col md={4}>\n                 <Card>\n                     <ListGroup variant='flush'>\n                         <ListGroup.Item>\n                             <h2>\n                                 Order Summary\n                             </h2>\n                         </ListGroup.Item>\n                         <ListGroup.Item>\n                             <Row>\n                                 <Col> Items</Col>\n                                 <Col> ৳{cart.itemsPrice}</Col>\n                             </Row>\n                         </ListGroup.Item>\n                         <ListGroup.Item>\n                             <Row>\n                                 <Col> Discount</Col>\n                                 <Col> ৳{cart.taxPrice}</Col>\n                             </Row>\n                         </ListGroup.Item>\n                         <ListGroup.Item>\n                             <Row>\n                                 <Col> Total</Col>\n                                 <Col> ৳{cart.totalPrice}</Col>\n                             </Row>\n                         </ListGroup.Item>\n                         <ListGroup.Item> {error && <Message variant='danger'>{error}</Message>}</ListGroup.Item>\n                         <ListGroup.Item>\n                             <Button type='button' className='btn-block' disabled={cart.cartItems===0} onClick={placeOrderHandler}>Complete Payment</Button>\n                         </ListGroup.Item>\n                         \n                     </ListGroup>\n                 </Card>\n             </Col>\n        </Row>   \n        </>\n    )\n}\n\nexport default PlaceOrderScreen\n","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\OrderScreen.js",["198"],"import React,{useEffect, useState} from 'react'\nimport axios from 'axios'\nimport {PayPalButton}from 'react-paypal-button-v2'\nimport {Button,Row,Col,ListGroup,Image,Card, NavLink} from 'react-bootstrap'\nimport{useDispatch,useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails,payOrder,deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET,ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nconst OrderScreen = ({match,history}) => {\n    const orderId=match.params.id\n    \n    const [sdkReady,setSdkReady]=useState(false)\n\n    const dispatch=useDispatch()  \n   \n    const userLogin=useSelector(state=>state.userLogin)\n    const{userInfo}=userLogin\n   \n    const orderDetails=useSelector(state=>state.orderDetails)\n    const{order,loading,error}=orderDetails\n\n    const orderPay=useSelector(state=>state.orderPay)\n    const{loading:loadingPay,success:successPay}=orderPay\n\n    const orderDeliver=useSelector(state=>state.orderDeliver)\n    const{loading:loadingDeliver,success:successDeliver}=orderDeliver\n\n if(!loading){\n    const addDecimals=(num)=>{\n        return (Math.round(num*100)/100).toFixed(2)\n    }\n    order.itemsPrice=addDecimals(order.orderItems.reduce(\n        (acc,item)=> acc+ item.price*item.qty,0\n    ))\n    }\n    useEffect(()=>{\n        if (!userInfo) {\n            history.push('/login')\n          }\n        const addPayPalScript = async() => {\n            const {data:clientId} = await axios.get('/api/config/paypal')\n            const script = document.createElement('script')\n            script.type='text/javascript'\n            script.src=`https://www.paypal.com/sdk/js?client-id=${clientId}`\n            script.async=true\n            script.onload=()=>{\n                setSdkReady(true)\n            }\n            document.body.appendChild(script)\n        }\n        if(!order || successPay ||successDeliver|| order._id !== orderId){\n        dispatch({type:ORDER_PAY_RESET})\n        dispatch({type:ORDER_DELIVER_RESET})\n        dispatch(getOrderDetails(orderId))\n    }else if(!order.isPaid){\n        if(!window.paypal){\n        addPayPalScript()\n    }else{\n        setSdkReady(true)\n    }}\n    },[dispatch, orderId, successPay, order, successDeliver, userInfo, history])\n\n\n    const successPaymentHandler=(paymentResult)=>{\n        console.log(paymentResult)\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler=()=>{\n        dispatch(deliverOrder(order))\n    }\n\n    return loading?<Loader/>:error ? <Message variant='danger'>{error}</Message>:<>\n    <h1>Order {order._id}</h1>\n    <Row>\n             <Col md={8}>\n                 <ListGroup variant ='flush'>\n                     <ListGroup.Item>\n                         <h2>Billing Address</h2>\n                        <p><strong>Name: </strong>{order.user.name}</p>\n                        <p><strong>Email: </strong>{' '}<a href={`mailto:${order.user.email}`}>{order.user.email} </a></p>\n                         \n                         <p>\n                             <strong> Address: </strong>\n                             {order.shippingAddress.address},{order.shippingAddress.city}\n                             ,{order.shippingAddress.postalCode},{order.shippingAddress.country}\n                         </p>\n                         \n                     </ListGroup.Item>\n                     <ListGroup.Item>\n                        <h2>Payment Method</h2>\n                        <p>\n                        <strong>Method: </strong>\n                        {order.paymentMethod}</p>\n                        {order.isPaid?(\n                            <Message variant='success'>Paid on {order.paidAt}</Message>):(\n                                <Message variant='danger'>Not Paid</Message>\n                            )\n                        }\n                     </ListGroup.Item>\n                     <ListGroup.Item>\n                         <h2>Order Items</h2>\n                         {order.orderItems.length===0?<Message>Order is empty</Message>:(\n                             <ListGroup variant ='flush'>\n                                 {order.orderItems.map((item,index)=>(\n                                     <ListGroup.Item key={index}>\n                                         <Row>\n                                             <Col md={1}>\n                                              <Image src={item.image} alt={item.name} fluid rounded />\n                                           </Col>\n                                           <Col>\n                                                <Link to ={`/product/${item.product}`}>\n                                                    {item.name}\n                                                </Link>\n                                           </Col>\n                                           <Col md={4}>\n                                               {item.qty} x ${item.price} = ${item.qty * item.price}\n                                           </Col>\n                                         </Row>\n                                     </ListGroup.Item>\n                                 ))}\n                             </ListGroup>\n                         )}\n                     </ListGroup.Item>\n                 </ListGroup>\n             </Col>\n             <Col md={4}>\n                 <Card>\n                     <ListGroup variant='flush'>\n                         <ListGroup.Item>\n                             <h2>\n                                 Order Summary\n                             </h2>\n                         </ListGroup.Item>\n                         <ListGroup.Item>\n                             <Row>\n                                 <Col> Price:</Col>\n                                 <Col> ${order.itemsPrice}</Col>\n                             </Row>\n                         </ListGroup.Item>\n                         <ListGroup.Item>\n                             <Row>\n                                 <Col> Discount:</Col>\n                                 <Col> ${order.taxPrice}</Col>\n                             </Row>\n                         </ListGroup.Item>\n                         <ListGroup.Item>\n                             <Row>\n                                 <Col> Total</Col>\n                                 <Col> ${order.totalPrice}</Col>\n                             </Row>\n                         </ListGroup.Item>   \n                         {!order.isPaid && (\n                             <ListGroup.Item>\n                                 {loadingPay && <Loader/>}\n                                 {!sdkReady ? <Loader/>:(\n                                     <PayPalButton amount={order.totalPrice}\n                                     onSuccess={successPaymentHandler}/>\n                                 )}\n                             </ListGroup.Item>\n                         )}   \n                         {loadingDeliver && <Loader/>}\n                         {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                             <ListGroup.Item>\n                                <Button type='Button' className='btn btn-block' onClick={deliverHandler}>\n                                    Mark as Delivered\n                                </Button>\n                             </ListGroup.Item>\n                         )}                  \n                     </ListGroup>\n                 </Card>\n             </Col>\n        </Row>\n    </>\n}\n\nexport default OrderScreen\n","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\UserListScreen.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\UserEditScreen.js",["199","200","201","202"],"import React,{useState,useEffect} from 'react'\nimport {Form,Button,} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport{useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {getUserDetails, updateUser} from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({match,history}) => {\n     const userId=match.params.id\n\n     const [name,setName]=useState('')\n\n     const [email,setEmail]=useState('')\n     const [password,setPassword]=useState('')\n     const [isAdmin,setIsAdmin]=useState(false)\n     const [message,setMessage]=useState(null)\n\n\n     const dispatch = useDispatch()\n\n     const userDetails=useSelector(state=>state.userDetails)\n     const {loading,error,user}=userDetails\n\n     const userUpdate=useSelector(state=>state.userUpdate)\n     const {loading:loadingUpdate,error:errorUpdate,success:successUpdate}=userUpdate\n     \n     \n     useEffect(() => {\n        if(successUpdate){\n            dispatch({type:USER_UPDATE_RESET})\n            history.push('/admin/userlist')\n        }else{\n            if (!user.name || user._id !==userId){\n                dispatch(getUserDetails(userId))\n            }else{\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n         \n     }, [dispatch, userId, user, successUpdate, history])\n\n\n     const submitHandler=(e)=>{\n         e.preventDefault()\n         dispatch(updateUser({_id:userId,name,email,isAdmin}))\n\n     }\n    return (\n        <>\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\n                Go Back\n            </Link>\n            <h1>Edit User</h1> \n                {loadingUpdate && <Loader/>}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                 \n                {loading?<Loader/>:error?<Message variant='danger'>{error}</Message>:(\n                <FormContainer>\n                \n                \n               \n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name'>\n                   \n                        <Form.Label>\n                            Name \n                        </Form.Label>\n                        <Form.Control type='name' placeholder='Enter name' value={name}\n                        onChange={(e)=>setName(e.target.value)}>\n      \n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='email'>\n                        <Form.Label>\n                            Email Address\n                        </Form.Label>\n                        <Form.Control type='email' placeholder='Enter email' value={email}\n                        onChange={(e)=>setEmail(e.target.value)}>\n      \n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='isAdmin'>\n                        <Form.Check type='checkbox' label='Is Admin' checked={isAdmin} onChange={(e)=>setIsAdmin(e.target.checked)}>                         \n                        </Form.Check>\n                    </Form.Group>\n                    \n                    \n                  <Button type='submit' variant='primary'>Update</Button>\n                </Form>\n             \n               </FormContainer>\n\n            )}\n            \n        </>\n        \n    )\n}\n\nexport default UserEditScreen\n","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\ProductListScreen.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\OrderListScreen.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\ProductEditScreen.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\reducers\\productsReducer.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\reducers\\userReducers.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\reducers\\orderReducer.js",["203"],"import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, \n    ORDER_DELIVER_FAIL, \n    ORDER_DELIVER_REQUEST, \n    ORDER_DELIVER_SUCCESS, \n    ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, \n    ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_RESET, ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_RESET, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_RESET, ORDER_PAY_SUCCESS,ORDER_DELIVER_RESET, ORDER_CREATE_RESET } from \"../constants/orderConstants\";\n\nexport const orderCreateReducer=(state={},action)=>{\n    switch(action.type){\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading:true,\n            }\n        case ORDER_CREATE_SUCCESS:\n            return{\n                loading:false,\n                success:true,\n                order:action.payload,\n            }\n        case ORDER_CREATE_FAIL:\n            return{\n                loading:false,\n                error:action.payload,\n            }\n        case ORDER_CREATE_RESET:\n                return {}\n        default:\n            return state\n    }\n}\n\nexport const orderDetailsReducer=(state={loading:true,orderItems:[],shippingAddress:{}},action)=>{\n    switch(action.type){\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading:true,\n            }\n        case ORDER_DETAILS_SUCCESS:\n            return{\n                loading:false,\n                order:action.payload,\n            }\n        case ORDER_DETAILS_FAIL:\n            return{\n                loading:false,\n                error:action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderPayReducer=(state={},action)=>{\n    switch(action.type){\n        case ORDER_PAY_REQUEST:\n            return {\n                loading:true,\n            }\n        case ORDER_PAY_SUCCESS:\n            return{\n                loading:false,\n                success:true\n            }\n        case ORDER_PAY_FAIL:\n            return{\n                loading:false,\n                error:action.payload,\n            }\n        case ORDER_PAY_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const orderListMyReducer=(state={orders:[]},action)=>{\n    switch(action.type){\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading:true,\n            }\n        case ORDER_LIST_MY_SUCCESS:\n            return{\n                loading:false,\n                orders:action.payload\n            }\n        case ORDER_LIST_MY_FAIL:\n            return{\n                loading:false,\n                error:action.payload,\n            }\n        case ORDER_LIST_MY_RESET:\n            return{orders:[]}\n        default:\n            return state\n    }\n}\n\nexport const orderListReducer=(state={orders:[]},action)=>{\n    switch(action.type){\n        case ORDER_LIST_REQUEST:\n            return {\n                loading:true,\n                orders:[]\n            }\n        case ORDER_LIST_SUCCESS:\n            return{\n                loading:false,\n                orders:action.payload.orders,\n                pages:action.payload.pages,\n                page:action.payload.page\n            }\n        case ORDER_LIST_FAIL:\n            return{\n                loading:false,\n                error:action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderDeliverReducer=(state={},action)=>{\n    switch(action.type){\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading:true,\n            }\n        case ORDER_DELIVER_SUCCESS:\n            return{\n                loading:false,\n                success:true\n            }\n        case ORDER_DELIVER_FAIL:\n            return{\n                loading:false,\n                error:action.payload,\n            }\n        case ORDER_DELIVER_RESET:\n            return {}\n        default:\n            return state\n    }\n}","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\Loader.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\Product.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\Paginate.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\Meta.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\Message.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\Rating.js",["204"],"import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Rating = ({value,text,color}) => {\n    return (\n        <div className='rating'>\n           <span>\n                <i style={{color}} className ={value >=1 ? 'fas fa-star' : value>=0.5? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span> \n            <span>\n                <i style={{color}} className ={value >=2 ? 'fas fa-star' : value>=1.5? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span> \n            <span>\n                <i style={{color}} className ={value >=3 ? 'fas fa-star' : value>=2.5? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span> \n            <span>\n                <i style={{color}} className ={value >=4 ? 'fas fa-star' : value>=3.5? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span> \n            <span>\n                <i style={{color}} className ={value >=5 ? 'fas fa-star' : value>=4.5? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span> \n            <span>{text && text}</span>\n        </div>\n    )\n}\nRating.defaultProps={\n    color:'#f8e825',\n}\n// Rating.propTypes={\n//     value:PropTypes.number.isRequired,\n//     text:PropTypes.string.isRequired,\n//     color:PropTypes.string,\n// }\n\nexport default Rating\n","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\ProductCarousel.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\SearchBox.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\FormContainer.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\actions\\userActions.js",["205"],"import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  localStorage.removeItem('cartItems')\n  localStorage.removeItem('shippingAddress')\n  localStorage.removeItem('paymentMethod')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n  document.location.href = '/login'\n}\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n    const { data } = await axios.get(`/api/users/${id}`, config)\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_DELETE_REQUEST,\n      })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.delete(`/api/users/${id}`, config)\n  \n      dispatch({\n        type: USER_DELETE_SUCCESS,\n      })\n    } catch (error) {\n      dispatch({\n        type: USER_DELETE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      })\n    }\n  }\n\n\n  export const updateUser = (user) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_UPDATE_REQUEST,\n      })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n         'Content-Type': 'application/json', \n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.put(`/api/users/${user._id}`,user,config)\n  \n      dispatch({\n        type: USER_UPDATE_SUCCESS,\n      })\n      dispatch({\n        type: USER_DETAILS_SUCCESS, payload:data\n      })\n      dispatch({ type: USER_DETAILS_RESET })\n    } catch (error) {\n      const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n      dispatch({\n        type: USER_UPDATE_FAIL,\n        payload:message,\n      })\n    }\n  }","D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\actions\\productsAction.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\actions\\orderActions.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\actions\\cartActions.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\constants\\userConstants.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\constants\\productsConstant.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\constants\\cartConstants.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\constants\\orderConstants.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\EDU\\L4T2\\Thesis\\Final Project\\frontend\\src\\screens\\CourseScreen.js",["206","207","208","209","210","211","212","213"],"import React,{useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport{useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\n\r\nconst CourseScreen = ({location,history}) => {\r\n\r\n \r\n    \r\n}\r\n\r\nexport default CourseScreen",{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":1,"column":26,"nodeType":"220","messageId":"221","endLine":1,"endColumn":34},{"ruleId":"218","severity":1,"message":"222","line":2,"column":9,"nodeType":"220","messageId":"221","endLine":2,"endColumn":15},{"ruleId":"218","severity":1,"message":"223","line":4,"column":9,"nodeType":"220","messageId":"221","endLine":4,"endColumn":18},{"ruleId":"218","severity":1,"message":"224","line":3,"column":46,"nodeType":"220","messageId":"221","endLine":3,"endColumn":59},{"ruleId":"218","severity":1,"message":"225","line":3,"column":67,"nodeType":"220","messageId":"221","endLine":3,"endColumn":76},{"ruleId":"218","severity":1,"message":"226","line":4,"column":20,"nodeType":"220","messageId":"221","endLine":4,"endColumn":24},{"ruleId":"218","severity":1,"message":"227","line":4,"column":25,"nodeType":"220","messageId":"221","endLine":4,"endColumn":36},{"ruleId":"218","severity":1,"message":"228","line":4,"column":37,"nodeType":"220","messageId":"221","endLine":4,"endColumn":43},{"ruleId":"218","severity":1,"message":"229","line":2,"column":9,"nodeType":"220","messageId":"221","endLine":2,"endColumn":13},{"ruleId":"230","severity":1,"message":"231","line":48,"column":9,"nodeType":"232","endLine":48,"endColumn":41,"suggestions":"233"},{"ruleId":"218","severity":1,"message":"234","line":2,"column":46,"nodeType":"220","messageId":"221","endLine":2,"endColumn":53},{"ruleId":"218","severity":1,"message":"234","line":4,"column":46,"nodeType":"220","messageId":"221","endLine":4,"endColumn":53},{"ruleId":"218","severity":1,"message":"235","line":17,"column":13,"nodeType":"220","messageId":"221","endLine":17,"endColumn":21},{"ruleId":"218","severity":1,"message":"236","line":17,"column":22,"nodeType":"220","messageId":"221","endLine":17,"endColumn":33},{"ruleId":"218","severity":1,"message":"237","line":19,"column":13,"nodeType":"220","messageId":"221","endLine":19,"endColumn":20},{"ruleId":"218","severity":1,"message":"238","line":19,"column":21,"nodeType":"220","messageId":"221","endLine":19,"endColumn":31},{"ruleId":"218","severity":1,"message":"239","line":6,"column":129,"nodeType":"220","messageId":"221","endLine":6,"endColumn":145},{"ruleId":"218","severity":1,"message":"240","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":17},{"ruleId":"218","severity":1,"message":"241","line":218,"column":15,"nodeType":"220","messageId":"221","endLine":218,"endColumn":19},{"ruleId":"218","severity":1,"message":"242","line":1,"column":8,"nodeType":"220","messageId":"221","endLine":1,"endColumn":13},{"ruleId":"218","severity":1,"message":"219","line":1,"column":15,"nodeType":"220","messageId":"221","endLine":1,"endColumn":23},{"ruleId":"218","severity":1,"message":"243","line":1,"column":24,"nodeType":"220","messageId":"221","endLine":1,"endColumn":33},{"ruleId":"218","severity":1,"message":"229","line":2,"column":9,"nodeType":"220","messageId":"221","endLine":2,"endColumn":13},{"ruleId":"218","severity":1,"message":"244","line":4,"column":8,"nodeType":"220","messageId":"221","endLine":4,"endColumn":19},{"ruleId":"218","severity":1,"message":"245","line":4,"column":20,"nodeType":"220","messageId":"221","endLine":4,"endColumn":31},{"ruleId":"218","severity":1,"message":"246","line":5,"column":8,"nodeType":"220","messageId":"221","endLine":5,"endColumn":15},{"ruleId":"218","severity":1,"message":"247","line":6,"column":8,"nodeType":"220","messageId":"221","endLine":6,"endColumn":14},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Helmet' is defined but never used.","'Container' is defined but never used.","'ListGroupItem' is defined but never used.","'FormGroup' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'success'. Either include it or remove the dependency array.","ArrayExpression",["250"],"'NavLink' is defined but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'ORDER_LIST_RESET' is defined but never used.","'PropTypes' is defined but never used.","'data' is assigned a value but never used.","'React' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},"Update the dependencies array to be: [dispatch, history, userInfo, user, success]",{"range":"253","text":"254"},[1723,1755],"[dispatch, history, userInfo, user, success]"]